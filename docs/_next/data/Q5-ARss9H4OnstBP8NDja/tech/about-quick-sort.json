{"pageProps":{"post":{"title":"Fighting with LeetCode -- 刷题记录一点思考","date":"2022-03-16T15:42:22.712Z","slug":"about-quick-sort","author":{"name":"Alfxjx","picture":"/assets/authors/alfxjx.jpg"},"content":"<h2>关于快速排序</h2>\n<p>今天学习了快速排序，读了<a href=\"https://www.ruanyifeng.com/blog/2011/04/quicksort_in_javascript.html\">阮一峰老师的博客</a>,但是这个预设了数组是不重复的； 对于<a href=\"https://leetcode-cn.com/problems/zui-xiao-de-kge-shu-lcof/\">这个题目来说</a>，有点不够用。后面又看了文章评论下面的讨论，对递归的快速排序改造了一下：</p>\n<pre><code>function sortArr(arr) {\r\n\tif (arr.length &#x3C;= 1) return arr;\r\n\tlet mid = Math.floor(arr.length / 2);\r\n\t// 这里没有使用splice方法去改变原数组，原因是 mid 是存在重复的情况。\r\n\tlet left = [];\r\n\tlet right = [];\r\n\tlet mids = [];\r\n\tfor (let i = 0; i &#x3C; arr.length; i++) {\r\n\t\tif (arr[i] &#x3C; arr[mid]) {\r\n\t\t\tleft.push(arr[i]);\r\n\t\t} else if (arr[i] > arr[mid]) {\r\n\t\t\tright.push(arr[i]);\r\n\t\t} else {\r\n\t\t\t// 对于有重复的情况，需要把重复的放到一起\r\n\t\t\tmids.push(arr[i]);\r\n\t\t}\r\n\t}\r\n\t// 其他和原文是一样的\r\n\treturn [...sortArr(left), ...mids, ...sortArr(right)];\r\n}\n</code></pre>\n","coverImage":"/assets/blog/leetcode.jpeg"}},"__N_SSG":true}